// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              String     @id @default(cuid())
  name            String?
  email           String?    @unique
  emailVerified   DateTime?
  image           String?
  accounts        Account[]
  sessions        Session[]
  companies_owner Company[]
  employee_roles  Employee[]
}

model Company {
  id             String  @id @default(cuid())
  fantasy_name   String?
  corporate_name String
  cnpj_cpf       String  @unique

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()

  ownerId   String
  owner     User?      @relation(fields: [ownerId], references: [id])
  employees Employee[]

  @@map("companies")
}

model Employee {
  id        String    @id @default(cuid())
  position  String?
  startDate DateTime
  endDate   DateTime?

  userId    String
  companyId String

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  company Company @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@unique([userId, companyId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ServiceOrder {
  id              String  @id @default(cuid())
  client_cpf_cnpj String
  type            String
  description     String
  material_value  Decimal
  labor_value     Decimal
  status          String  @default("Pendente")
  client_name     String
  client_email    String
  initial_date    DateTime
  estimated_date  DateTime

  @@map("services-orders")
}
